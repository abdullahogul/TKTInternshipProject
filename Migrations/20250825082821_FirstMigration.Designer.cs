// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TktInternshipProject.Data;

#nullable disable

namespace TktInternshipProject.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250825082821_FirstMigration")]
    partial class FirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TktInternshipProject.Models.Tables.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("60bece64-d9fe-4533-a326-08569eaa37df"),
                            Name = "Human Resources"
                        },
                        new
                        {
                            Id = new Guid("927759d0-61d9-49e9-9f04-48536964b6c9"),
                            Name = "Sales"
                        },
                        new
                        {
                            Id = new Guid("fd9e1927-baaa-4d65-8380-f7b0cb35beed"),
                            Name = "Marketing"
                        });
                });

            modelBuilder.Entity("TktInternshipProject.Models.Tables.TaskItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AssignedDepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RejectReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssignedDepartmentId");

                    b.HasIndex("CreatedByUserId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("TktInternshipProject.Models.Tables.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("954f60ae-b788-4bc2-b2a1-45abb9a8e6fd"),
                            DepartmentId = new Guid("60bece64-d9fe-4533-a326-08569eaa37df"),
                            Email = "mary@company.com",
                            Name = "Mery",
                            Password = "mery1234!",
                            SurName = "Glenn",
                            Title = "Human Resources Specialist"
                        },
                        new
                        {
                            Id = new Guid("86dfdcd5-bd0e-4d0c-b754-7d36055761cb"),
                            DepartmentId = new Guid("927759d0-61d9-49e9-9f04-48536964b6c9"),
                            Email = "john@company.com",
                            Name = "John",
                            Password = "john4321!",
                            SurName = "Doe",
                            Title = "Sales Department Manager"
                        });
                });

            modelBuilder.Entity("TktInternshipProject.Models.Tables.TaskItem", b =>
                {
                    b.HasOne("TktInternshipProject.Models.Tables.Department", "AssignedDepartment")
                        .WithMany()
                        .HasForeignKey("AssignedDepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TktInternshipProject.Models.Tables.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssignedDepartment");

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("TktInternshipProject.Models.Tables.User", b =>
                {
                    b.HasOne("TktInternshipProject.Models.Tables.Department", "Department")
                        .WithMany("Users")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("TktInternshipProject.Models.Tables.Department", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
