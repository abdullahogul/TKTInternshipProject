// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Taskms.Api.Data;

#nullable disable

namespace Taskms.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250826061307_ThirdMigration")]
    partial class ThirdMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Taskms.Api.Models.Entitys.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("60bece64-d9fe-4533-a326-08569eaa37df"),
                            Name = "Human Resources"
                        },
                        new
                        {
                            Id = new Guid("927759d0-61d9-49e9-9f04-48536964b6c9"),
                            Name = "Sales"
                        },
                        new
                        {
                            Id = new Guid("fd9e1927-baaa-4d65-8380-f7b0cb35beed"),
                            Name = "Marketing"
                        });
                });

            modelBuilder.Entity("Taskms.Api.Models.Entitys.TaskItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AssignedDepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RejectReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssignedDepartmentId");

                    b.HasIndex("CreatedByUserId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("Taskms.Api.Models.Entitys.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("954f60ae-b788-4bc2-b2a1-45abb9a8e6fd"),
                            DepartmentId = new Guid("60bece64-d9fe-4533-a326-08569eaa37df"),
                            Email = "mary@company.com",
                            Name = "Mery",
                            Password = "mery1234!",
                            Surname = "Glenn",
                            Title = "Human Resources Manager"
                        },
                        new
                        {
                            Id = new Guid("86dfdcd5-bd0e-4d0c-b754-7d36055761cb"),
                            DepartmentId = new Guid("927759d0-61d9-49e9-9f04-48536964b6c9"),
                            Email = "john@company.com",
                            Name = "John",
                            Password = "john1234!",
                            Surname = "Doe",
                            Title = "Sales Department Manager"
                        },
                        new
                        {
                            Id = new Guid("fbe707f5-4ded-46e9-8f96-499efc03425b"),
                            DepartmentId = new Guid("60bece64-d9fe-4533-a326-08569eaa37df"),
                            Email = "mustafa@company.com",
                            Name = "Mustafa",
                            Password = "mustafa1234!",
                            Surname = "Ocak",
                            Title = "Human Resources Specialist"
                        },
                        new
                        {
                            Id = new Guid("53e9054e-7028-4efc-ad10-4fc21da7a7c8"),
                            DepartmentId = new Guid("60bece64-d9fe-4533-a326-08569eaa37df"),
                            Email = "sedat@company.com",
                            Name = "Sedat",
                            Password = "sedat1234!",
                            Surname = "Akkuş",
                            Title = "Human Resources Specialist"
                        },
                        new
                        {
                            Id = new Guid("b2a90398-fbb9-42c5-8831-b838c3948f86"),
                            DepartmentId = new Guid("927759d0-61d9-49e9-9f04-48536964b6c9"),
                            Email = "ceyda@company.com",
                            Name = "Ceyda",
                            Password = "ceyda1234!",
                            Surname = "Aksaç",
                            Title = "Sales Specialist"
                        },
                        new
                        {
                            Id = new Guid("702a82ba-02ca-4ab8-82d1-94f501e535e0"),
                            DepartmentId = new Guid("927759d0-61d9-49e9-9f04-48536964b6c9"),
                            Email = "yağizhan@company.com",
                            Name = "Yağizhan",
                            Password = "yağizhan1234!",
                            Surname = "Avci",
                            Title = "Sales Specialist"
                        },
                        new
                        {
                            Id = new Guid("69bdc567-73b3-425d-a0e3-ca5243435da1"),
                            DepartmentId = new Guid("fd9e1927-baaa-4d65-8380-f7b0cb35beed"),
                            Email = "semih@company.com",
                            Name = "Semih",
                            Password = "semih1234!",
                            Surname = "Özdoğan",
                            Title = "Marketing Department Manager"
                        },
                        new
                        {
                            Id = new Guid("6ad6fc80-aedc-453f-86f6-ae1daee3bdd2"),
                            DepartmentId = new Guid("fd9e1927-baaa-4d65-8380-f7b0cb35beed"),
                            Email = "murat@company.com",
                            Name = "Murat",
                            Password = "murat1234!",
                            Surname = "Atalik",
                            Title = "Marketing Specialist"
                        },
                        new
                        {
                            Id = new Guid("e21dbfee-6bc8-44fc-b921-5a703cb0ba84"),
                            DepartmentId = new Guid("fd9e1927-baaa-4d65-8380-f7b0cb35beed"),
                            Email = "arya@company.com",
                            Name = "Arya",
                            Password = "arya1234!",
                            Surname = "Açikgöz",
                            Title = "Marketing Specialist"
                        });
                });

            modelBuilder.Entity("Taskms.Api.Models.Entitys.TaskItem", b =>
                {
                    b.HasOne("Taskms.Api.Models.Entitys.Department", "AssignedDepartment")
                        .WithMany()
                        .HasForeignKey("AssignedDepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Taskms.Api.Models.Entitys.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssignedDepartment");

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("Taskms.Api.Models.Entitys.User", b =>
                {
                    b.HasOne("Taskms.Api.Models.Entitys.Department", "Department")
                        .WithMany("Users")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Taskms.Api.Models.Entitys.Department", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
